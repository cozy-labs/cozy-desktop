name: Setup cozy-stack
author: Erwan Guyader
description: Downloads cozy-stack, starts it and create a test instance.
inputs:
  cozy-stack-storage:
    description: 'The folder location where the remote cozy-stack files will be stored'
    required: false
  cozy-passphrase:
    description: 'The user passphrase of the created Cozy instance'
    required: false
env:
  ASSETS_PATH: "${{ runner.temp }}/assets"
  SSHFS_VERSION: '2.5.0'
runs:
  using: composite
  steps:
    - name: Download cozy-stack
      shell: bash
      run: go get github.com/cozy/cozy-stack

    - name: Set env variables
      shell: bash
      run: |
        if [[ -z $COZY_STACK_STORAGE ]]; then
          echo "COZY_STACK_STORAGE=${{ inputs.cozy-stack-storage }}" >> $GITHUB_ENV
        fi
        if [[ -z $COZY_URL ]]; then
          echo "COZY_URL=${{ inputs.cozy-url }}" >> $GITHUB_ENV
        fi
        if [[ -z $COZY_DOMAIN ]]; then
          echo "COZY_DOMAIN=${COZY_URL#http://}" >> $GITHUB_ENV
        fi
        if [[ -z $COZY_PASSPHRASE ]]; then
          echo "COZY_PASSPHRASE=${{ inputs.cozy-passphrase }}" >> $GITHUB_ENV
        fi

    - name: Cache sshfs pkg
      id: cache-node-modules
      uses: actions/cache@v2
      env:
        cache-name: cache-sshfs-pkg
      with:
        path: ${{ env.ASSETS_PATH }}/sshfs-${{ env.SSHFS_VERSION }}.pkg
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.SSHFS_VERSION }}

    - name: Install sshfs
      env:
        PKG_PATH: "${{ env.ASSETS_PATH }}/sshfs-${{ env.SSHFS_VERSION }}.pkg"
      run: |
        if [ "${{ runner.os }}" == "osx" ]; then
          if [[ ! -f $PKG_PATH ]]; then
              curl -L https://github.com/osxfuse/sshfs/releases/download/osxfuse-sshfs-${{ env.SSHFS_VERSION }}/sshfs-${{ env.SSHFS_VERSION }}.pkg --output $PKG_PATH
          fi

          brew install --cask osxfuse
          sudo installer -pkg $PKG_PATH -target /
        fi


    - name: Create cozy-stack storage
      shell: bash
      run: |
        mkdir -p $COZY_STACK_STORAGE

        if [ "${{ runner.os }}" == "macOS" ]; then
          podman-machine ssh box -- mkdir /home/tc/storage
          podman-machine mount box:/home/tc/storage $COZY_STACK_STORAGE
        fi

    - name: Create a local instance and an OAuth client
      shell: bash
      run: |
        cozy-stack serve --fs-url "file://$COZY_STACK_STORAGE" --log-level warning >cozy-stack.log 2>&1 &
        until cozy-stack instances add --dev --passphrase "$COZY_PASSPHRASE" "$COZY_DOMAIN"
        do
          sleep 1
        done
        COZY_CLIENT_ID=$(cozy-stack instances client-oauth "$COZY_DOMAIN" http://localhost/ test github.com/cozy-labs/cozy-desktop)
        COZY_STACK_TOKEN=$(cozy-stack instances token-oauth "$COZY_DOMAIN" "$COZY_CLIENT_ID" io.cozy.files io.cozy.settings)
        # Variables are not directly available in next steps; we need to write them into a special file
        echo "COZY_CLIENT_ID=$COZY_CLIENT_ID" >> $GITHUB_ENV
        echo "COZY_STACK_TOKEN=$COZY_STACK_TOKEN" >> $GITHUB_ENV
